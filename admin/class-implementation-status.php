<?php
/**
 * Implementation Status Dashboard - ÂÆüË£ÖÁä∂Ê≥ÅÁÆ°ÁêÜ
 * 
 * „Å©„Åì„Åæ„Åß‰Ωú„Å£„Åü„Åã‰∏ÄÁõÆ„ÅßÂàÜ„Åã„ÇãÁÆ°ÁêÜÁîªÈù¢
 * ÂêÑÊ©üËÉΩ„ÅÆÂÆüË£ÖÁä∂Ê≥Å„ÄÅÂãï‰ΩúÁ¢∫Ë™ç„ÄÅTODOÁÆ°ÁêÜ
 */

namespace URP\Admin;

if (!defined('ABSPATH')) {
    exit;
}

class URP_Implementation_Status {
    
    /**
     * ÂàùÊúüÂåñ
     */
    public static function init() {
        add_action('admin_menu', [self::class, 'add_menu'], 99);
        add_action('wp_ajax_urp_check_component', [self::class, 'ajax_check_component']);
    }
    
    /**
     * „É°„Éã„É•„ÉºËøΩÂä†
     */
    public static function add_menu() {
        add_submenu_page(
            'urp-dashboard',
            'ÂÆüË£ÖÁä∂Ê≥Å',
            'üîß ÂÆüË£ÖÁä∂Ê≥Å',
            'manage_options',
            'urp-implementation',
            [self::class, 'render_page']
        );
    }
    
    /**
     * „Éö„Éº„Ç∏Ë°®Á§∫
     */
    public static function render_page() {
        ?>
        <div class="wrap">
            <h1>Universal Review Platform - ÂÆüË£ÖÁä∂Ê≥Å„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ</h1>
            
            <div class="urp-status-grid">
                
                <!-- „Ç≥„Ç¢Ê©üËÉΩ„ÅÆÁä∂Ê≥Å -->
                <div class="urp-status-section">
                    <h2>üì¶ „Ç≥„Ç¢Ê©üËÉΩÔºàCoreÔºâ</h2>
                    <?php self::render_core_status(); ?>
                </div>
                
                <!-- Â∑ÆÂà•ÂåñÊ©üËÉΩ„ÅÆÁä∂Ê≥Å -->
                <div class="urp-status-section">
                    <h2>üåü Â∑ÆÂà•ÂåñÊ©üËÉΩÔºà„Å©„Åì„Å´„ÇÇË≤†„Åë„Å™„ÅÑÔºâ</h2>
                    <?php self::render_unique_features(); ?>
                </div>
                
                <!-- „Éá„Éº„Çø„Éô„Éº„ÇπÁä∂Ê≥Å -->
                <div class="urp-status-section">
                    <h2>üóÑÔ∏è „Éá„Éº„Çø„Éô„Éº„Çπ</h2>
                    <?php self::render_database_status(); ?>
                </div>
                
                <!-- ÁÆ°ÁêÜÁîªÈù¢UIÁä∂Ê≥Å -->
                <div class="urp-status-section">
                    <h2>üñ•Ô∏è ÁÆ°ÁêÜÁîªÈù¢UI</h2>
                    <?php self::render_admin_ui_status(); ?>
                </div>
                
                <!-- Â∞ÇÈñÄ„Éó„É©„Ç∞„Ç§„É≥ -->
                <div class="urp-status-section">
                    <h2>üîå Â∞ÇÈñÄ„Éó„É©„Ç∞„Ç§„É≥</h2>
                    <?php self::render_extension_status(); ?>
                </div>
                
                <!-- TODO/Ê¨°„ÅÆ‰ΩúÊ•≠ -->
                <div class="urp-status-section">
                    <h2>üìù TODO / Ê¨°„ÅÆ‰ΩúÊ•≠ÂÄôË£ú</h2>
                    <?php self::render_todo_list(); ?>
                </div>
                
            </div>
            
            <!-- „É™„Ç¢„É´„Çø„Ç§„É†„ÉÅ„Çß„ÉÉ„ÇØ -->
            <div class="urp-realtime-check">
                <h2>üîç „É™„Ç¢„É´„Çø„Ç§„É†Âãï‰ΩúÁ¢∫Ë™ç</h2>
                <button id="urp-check-all" class="button button-primary">ÂÖ®Ê©üËÉΩ„Çí„ÉÅ„Çß„ÉÉ„ÇØ</button>
                <div id="urp-check-results"></div>
            </div>
            
            <style>
            .urp-status-grid {
                display: grid;
                grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
                gap: 20px;
                margin: 20px 0;
            }
            
            .urp-status-section {
                background: #fff;
                border: 1px solid #ccd0d4;
                border-radius: 4px;
                padding: 20px;
            }
            
            .urp-status-section h2 {
                margin-top: 0;
                padding-bottom: 10px;
                border-bottom: 2px solid #f0f0f1;
            }
            
            .status-table {
                width: 100%;
                margin-top: 15px;
            }
            
            .status-table td {
                padding: 8px 5px;
                border-bottom: 1px solid #f0f0f1;
            }
            
            .status-table td:first-child {
                font-weight: 600;
                width: 60%;
            }
            
            .status-badge {
                display: inline-block;
                padding: 3px 8px;
                border-radius: 3px;
                font-size: 12px;
                font-weight: 600;
            }
            
            .status-complete {
                background: #00a32a;
                color: white;
            }
            
            .status-partial {
                background: #dba617;
                color: white;
            }
            
            .status-missing {
                background: #d63638;
                color: white;
            }
            
            .status-planned {
                background: #72aee6;
                color: white;
            }
            
            .progress-bar {
                width: 100%;
                height: 20px;
                background: #f0f0f1;
                border-radius: 10px;
                overflow: hidden;
                margin: 10px 0;
            }
            
            .progress-fill {
                height: 100%;
                background: linear-gradient(90deg, #00a32a, #00c637);
                transition: width 0.3s;
                display: flex;
                align-items: center;
                justify-content: center;
                color: white;
                font-size: 12px;
                font-weight: bold;
            }
            
            .todo-item {
                padding: 10px;
                margin: 5px 0;
                background: #f6f7f7;
                border-left: 4px solid #2271b1;
                cursor: pointer;
                transition: all 0.2s;
            }
            
            .todo-item:hover {
                background: #e5e5e5;
                transform: translateX(5px);
            }
            
            .priority-high {
                border-left-color: #d63638;
            }
            
            .priority-medium {
                border-left-color: #dba617;
            }
            
            .priority-low {
                border-left-color: #00a32a;
            }
            
            .urp-realtime-check {
                background: #fff;
                padding: 20px;
                margin-top: 20px;
                border: 1px solid #ccd0d4;
                border-radius: 4px;
            }
            
            #urp-check-results {
                margin-top: 20px;
            }
            
            .check-result {
                padding: 10px;
                margin: 5px 0;
                border-radius: 3px;
            }
            
            .check-success {
                background: #d4f4dd;
                border: 1px solid #00a32a;
            }
            
            .check-error {
                background: #fcf0f1;
                border: 1px solid #d63638;
            }
            </style>
            
            <script>
            jQuery(document).ready(function($) {
                // ÂÖ®Ê©üËÉΩ„ÉÅ„Çß„ÉÉ„ÇØ
                $('#urp-check-all').on('click', function() {
                    const $button = $(this);
                    const $results = $('#urp-check-results');
                    
                    $button.prop('disabled', true).text('„ÉÅ„Çß„ÉÉ„ÇØ‰∏≠...');
                    $results.html('');
                    
                    const components = [
                        'URP_Site_Mode',
                        'URP_Extension_Manager',
                        'URP_Rating_Fields',
                        'URP_Trust_Score',
                        'URP_Affiliate_Manager'
                    ];
                    
                    components.forEach(function(component) {
                        $.post(ajaxurl, {
                            action: 'urp_check_component',
                            component: component,
                            nonce: '<?php echo wp_create_nonce('urp_check'); ?>'
                        }, function(response) {
                            const resultClass = response.success ? 'check-success' : 'check-error';
                            const icon = response.success ? '‚úÖ' : '‚ùå';
                            const message = response.data.message || '„ÉÅ„Çß„ÉÉ„ÇØÂÆå‰∫Ü';
                            
                            $results.append(
                                '<div class="check-result ' + resultClass + '">' +
                                icon + ' ' + component + ': ' + message +
                                '</div>'
                            );
                        });
                    });
                    
                    setTimeout(function() {
                        $button.prop('disabled', false).text('ÂÖ®Ê©üËÉΩ„Çí„ÉÅ„Çß„ÉÉ„ÇØ');
                    }, 2000);
                });
            });
            </script>
        </div>
        <?php
    }
    
    /**
     * Ëá™ÂãïÊ§úÂá∫Ôºö„Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÅÆÂÆüË£ÖÁä∂Ê≥Å„ÇíÂà§ÂÆö
     */
    private static function detect_component_status($class, $file) {
        $plugin_dir = WP_PLUGIN_DIR . '/universal-review-platform/';
        
        // „Éï„Ç°„Ç§„É´„ÅÆÂ≠òÂú®„ÉÅ„Çß„ÉÉ„ÇØ
        $file_exists = file_exists($plugin_dir . $file);
        
        // „ÇØ„É©„Çπ„ÅÆÂ≠òÂú®„ÉÅ„Çß„ÉÉ„ÇØÔºànamespaceÂØæÂøúÔºâ
        $class_exists = class_exists($class) || 
                       class_exists('URP\\Core\\' . $class) ||
                       class_exists('URP\\Admin\\' . $class);
        
        // „Éï„Ç°„Ç§„É´„ÅåÂ≠òÂú®„Åô„ÇãÂ†¥Âêà„ÄÅ‰∏≠Ë∫´„ÇÇ„ÉÅ„Çß„ÉÉ„ÇØ
        $has_content = false;
        if ($file_exists) {
            $content = file_get_contents($plugin_dir . $file);
            // „ÇØ„É©„ÇπÂÆöÁæ©„Åå„ÅÇ„Çã„ÅãÁ¢∫Ë™ç
            $has_content = (strpos($content, 'class ' . $class) !== false) ||
                          (strpos($content, 'class URP_' . str_replace('URP_', '', $class)) !== false);
            
            // ‰∏ªË¶Å„É°„ÇΩ„ÉÉ„Éâ„ÅÆÂ≠òÂú®Á¢∫Ë™çÔºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
            $has_init = strpos($content, 'function init') !== false ||
                       strpos($content, 'function __construct') !== false;
        }
        
        // Áä∂ÊÖãÂà§ÂÆö„É≠„Ç∏„ÉÉ„ÇØ
        if ($file_exists && $class_exists && $has_content) {
            return 'complete';
        } elseif ($file_exists && $has_content) {
            return 'partial';  // „Éï„Ç°„Ç§„É´„ÅØ„ÅÇ„Çã„Åå„ÇØ„É©„Çπ„Åå„É≠„Éº„Éâ„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑ
        } elseif ($file_exists) {
            return 'skeleton';  // „Éï„Ç°„Ç§„É´„ÅØ„ÅÇ„Çã„Åå‰∏≠Ë∫´„Åå‰∏çÂÆåÂÖ®
        } else {
            return 'missing';
        }
    }
    
    /**
     * „Ç≥„Ç¢Ê©üËÉΩ„ÅÆÁä∂Ê≥ÅË°®Á§∫ÔºàËá™ÂãïÊ§úÂá∫ÁâàÔºâ
     */
    private static function render_core_status() {
        // „Ç≥„É≥„Éù„Éº„Éç„É≥„ÉàÂÆöÁæ©Ôºà„Éï„Ç°„Ç§„É´„Éë„Çπ„Å®Ë™¨Êòé„ÅÆ„ÅøÁÆ°ÁêÜÔºâ
        $core_components = [
            'URP_Site_Mode' => [
                'label' => '„Çµ„Ç§„Éà„É¢„Éº„ÉâÁÆ°ÁêÜ',
                'file' => 'core/class-site-mode.php',
                'namespace' => 'URP\\Core',
                'required_methods' => ['init', 'get_mode', 'set_mode'],
                'note' => '3„É¢„Éº„ÉâÂàáÊõøÊ©üËÉΩ'
            ],
            'URP_Extension_Manager' => [
                'label' => 'Â∞ÇÈñÄ„Éó„É©„Ç∞„Ç§„É≥ÁÆ°ÁêÜ',
                'file' => 'core/class-extension-manager.php',
                'namespace' => 'URP\\Core',
                'required_methods' => ['init', 'register_extension'],
                'note' => 'Êã°Âºµ„Éó„É©„Ç∞„Ç§„É≥ÈÄ£Êê∫'
            ],
            'URP_Rating_Fields' => [
                'label' => 'ÂãïÁöÑË©ï‰æ°È†ÖÁõÆ',
                'file' => 'core/class-rating-fields.php',
                'namespace' => 'URP\\Core',
                'required_methods' => ['register_field', 'get_form_fields'],
                'note' => 'Ë©ï‰æ°È†ÖÁõÆ„ÅÆÂãïÁöÑÁÆ°ÁêÜ'
            ],
            'URP_Trust_Score' => [
                'label' => '‰ø°È†ºÂ∫¶„Çπ„Ç≥„Ç¢',
                'file' => 'core/class-trust-score.php',
                'namespace' => 'URP\\Core',
                'required_methods' => ['calculate', 'get_badge'],
                'note' => '„É¨„Éì„É•„Ç¢„Éº‰ø°È†ºÂ∫¶„Ç∑„Çπ„ÉÜ„É†'
            ],
            'URP_Affiliate_Manager' => [
                'label' => '„Ç¢„Éï„Ç£„É™„Ç®„Ç§„ÉàÁÆ°ÁêÜ',
                'file' => 'core/class-affiliate-manager.php',
                'namespace' => 'URP\\Core',
                'required_methods' => ['fetch_amazon_product', 'generate_affiliate_link'],
                'note' => 'Amazon/Ê•ΩÂ§©ÈÄ£Êê∫'
            ],
            'URP_Database' => [
                'label' => '„Éá„Éº„Çø„Éô„Éº„ÇπÁÆ°ÁêÜ',
                'file' => 'core/class-database.php',
                'namespace' => 'URP\\Core',
                'required_methods' => ['create_tables', 'upgrade'],
                'note' => '„ÉÜ„Éº„Éñ„É´ÁÆ°ÁêÜ'
            ],
            'URP_Review_Manager' => [
                'label' => '„É¨„Éì„É•„ÉºÁÆ°ÁêÜ',
                'file' => 'core/class-review-manager.php',
                'namespace' => 'URP\\Core',
                'required_methods' => ['create', 'update', 'delete'],
                'note' => 'CRUDÊìç‰Ωú'
            ],
            'URP_Security' => [
                'label' => '„Çª„Ç≠„É•„É™„ÉÜ„Ç£',
                'file' => 'core/class-security.php',
                'namespace' => 'URP\\Core',
                'required_methods' => ['sanitize', 'validate'],
                'note' => '„Çª„Ç≠„É•„É™„ÉÜ„Ç£Âá¶ÁêÜ'
            ],
            'URP_API_Router' => [
                'label' => 'API„É´„Éº„Çø„Éº',
                'file' => 'core/class-api-router.php',
                'namespace' => 'URP\\Core',
                'required_methods' => ['register_routes'],
                'note' => 'REST API'
            ],
            'URP_Cache_Manager' => [
                'label' => '„Ç≠„É£„ÉÉ„Ç∑„É•ÁÆ°ÁêÜ',
                'file' => 'core/class-cache-manager.php',
                'namespace' => 'URP\\Core',
                'required_methods' => ['get', 'set', 'delete'],
                'note' => '„Ç≠„É£„ÉÉ„Ç∑„É•Âà∂Âæ°'
            ]
        ];
        
        $total = count($core_components);
        $complete = 0;
        $partial = 0;
        $skeleton = 0;
        
        echo '<table class="status-table">';
        foreach ($core_components as $class => $info) {
            // Ëá™ÂãïÊ§úÂá∫„ÅßÁä∂ÊÖã„ÇíÂà§ÂÆö
            $status = self::detect_component_status($class, $info['file']);
            
            // „É°„ÇΩ„ÉÉ„Éâ„ÅÆÂÆüË£ÖÁä∂Ê≥Å„ÇÇÁ¢∫Ë™çÔºà„Ç™„Éó„Ç∑„Éß„É≥Ôºâ
            $method_status = self::check_required_methods($class, $info);
            
            // „Éê„ÉÉ„Ç∏„ÅÆË®≠ÂÆö
            switch($status) {
                case 'complete':
                    $complete++;
                    $badge = '<span class="status-badge status-complete">ÂÆüË£ÖÊ∏à</span>';
                    $icon = '‚úÖ';
                    break;
                case 'partial':
                    $partial++;
                    $badge = '<span class="status-badge status-partial">‰∏ÄÈÉ®ÂÆüË£Ö</span>';
                    $icon = '‚ö†Ô∏è';
                    break;
                case 'skeleton':
                    $skeleton++;
                    $badge = '<span class="status-badge status-planned">„Çπ„Ç±„É´„Éà„É≥</span>';
                    $icon = 'üìù';
                    break;
                default:
                    $badge = '<span class="status-badge status-missing">Êú™ÂÆüË£Ö</span>';
                    $icon = '‚ùå';
            }
            
            echo '<tr>';
            echo '<td>';
            echo $icon . ' <strong>' . esc_html($info['label']) . '</strong>';
            
            // Ë©≥Á¥∞ÊÉÖÂ†±„ÇíË°®Á§∫
            echo '<br><small style="color:#666;">';
            echo esc_html($info['note']);
            
            // „Éï„Ç°„Ç§„É´„Å®„ÇØ„É©„Çπ„ÅÆÁä∂ÊÖã„ÇíË©≥Á¥∞Ë°®Á§∫
            if ($status === 'partial') {
                echo ' („Éï„Ç°„Ç§„É´„ÅÇ„Çä„ÄÅ„ÇØ„É©„ÇπÊú™„É≠„Éº„Éâ)';
            } elseif ($status === 'skeleton') {
                echo ' („Çπ„Ç±„É´„Éà„É≥„Éï„Ç°„Ç§„É´)';
            }
            
            // „É°„ÇΩ„ÉÉ„ÉâÂÆüË£ÖÁä∂Ê≥Å
            if ($method_status && $status === 'complete') {
                echo '<br>„É°„ÇΩ„ÉÉ„Éâ: ' . $method_status;
            }
            
            echo '</small></td>';
            echo '<td>' . $badge . '</td>';
            echo '</tr>';
        }
        echo '</table>';
        
        // ÈÄ≤Êçó„Éê„ÉºÔºàÈáç„Åø‰ªò„Åë„ÇíË™øÊï¥Ôºâ
        $progress = round((
            ($complete * 1.0) + 
            ($partial * 0.6) + 
            ($skeleton * 0.2)
        ) / $total * 100);
        
        echo '<div class="progress-bar">';
        echo '<div class="progress-fill" style="width:' . $progress . '%">' . $progress . '%</div>';
        echo '</div>';
        
        // „Çµ„Éû„É™„Éº
        echo '<p style="margin-top:10px; font-size:12px; color:#666;">';
        echo sprintf(
            'ÂÆåÊàê: %d / ‰∏ÄÈÉ®ÂÆüË£Ö: %d / „Çπ„Ç±„É´„Éà„É≥: %d / Êú™ÂÆüË£Ö: %d',
            $complete,
            $partial,
            $skeleton,
            $total - $complete - $partial - $skeleton
        );
        echo '</p>';
    }
    
    /**
     * ÂøÖÈ†à„É°„ÇΩ„ÉÉ„Éâ„ÅÆÂÆüË£ÖÁ¢∫Ë™ç
     */
    private static function check_required_methods($class, $info) {
        if (!isset($info['required_methods']) || empty($info['required_methods'])) {
            return null;
        }
        
        // namespace‰ªò„Åç„ÇØ„É©„ÇπÂêç
        $full_class = $info['namespace'] . '\\' . $class;
        
        if (!class_exists($full_class) && !class_exists($class)) {
            return null;
        }
        
        $class_name = class_exists($full_class) ? $full_class : $class;
        $reflection = new \ReflectionClass($class_name);
        
        $implemented = [];
        $missing = [];
        
        foreach ($info['required_methods'] as $method) {
            if ($reflection->hasMethod($method)) {
                $implemented[] = $method;
            } else {
                $missing[] = $method;
            }
        }
        
        if (count($missing) === 0) {
            return count($implemented) . '/' . count($info['required_methods']) . ' ÂÆüË£ÖÊ∏à';
        } else {
            return count($implemented) . '/' . count($info['required_methods']) . ' (Êú™ÂÆüË£Ö: ' . implode(', ', $missing) . ')';
        }
    }
    
    /**
     * Â∑ÆÂà•ÂåñÊ©üËÉΩ„ÅÆÁä∂Ê≥ÅÔºàËá™ÂãïÊ§úÂá∫ÁâàÔºâ
     */
    private static function render_unique_features() {
        // Â∑ÆÂà•ÂåñÊ©üËÉΩ„ÅÆÂÆöÁæ©
        $features = [
            'URP_Gamification' => [
                'label' => '„Ç≤„Éº„Éü„Éï„Ç£„Ç±„Éº„Ç∑„Éß„É≥',
                'file' => 'core/class-gamification.php',
                'priority' => 5,
                'description' => '„Éê„ÉÉ„Ç∏„ÄÅ„É¨„Éô„É´„ÄÅ„Éù„Ç§„É≥„Éà'
            ],
            'URP_Social_Proof' => [
                'label' => 'Á§æ‰ºöÁöÑË®ºÊòé',
                'file' => 'core/class-social-proof.php',
                'priority' => 7,
                'description' => '„Äå‰ªä‚óã‰∫∫„ÅåË¶ã„Å¶„ÅÑ„Åæ„Åô„Äç'
            ],
            'URP_ML_Spam_Detector' => [
                'label' => 'Ê©üÊ¢∞Â≠¶Áøí„Çπ„Éë„É†Ê§úÂá∫',
                'file' => 'core/class-ml-spam-detector.php',
                'priority' => 8,
                'description' => 'AIËá™ÂãïÂà§ÂÆö'
            ],
            'URP_Realtime_Update' => [
                'label' => '„É™„Ç¢„É´„Çø„Ç§„É†Êõ¥Êñ∞',
                'file' => 'core/class-realtime-update.php',
                'priority' => 9,
                'description' => 'WebSocket'
            ],
            'URP_AI_Summary' => [
                'label' => 'AIË¶ÅÁ¥ÑÁîüÊàê',
                'file' => 'core/class-ai-summary.php',
                'priority' => 10,
                'description' => '100‰ª∂‚Üí3Ë°åË¶ÅÁ¥Ñ'
            ],
            'URP_Taste_Map' => [
                'label' => 'ÂóúÂ•Ω„Éû„ÉÉ„Éî„É≥„Ç∞',
                'file' => 'core/class-taste-map.php',
                'priority' => 11,
                'description' => '„É¶„Éº„Ç∂„ÉºÂ•Ω„ÅøÂàÜÊûê'
            ],
            'URP_Photo_AI' => [
                'label' => 'ÁîªÂÉèAIËß£Êûê',
                'file' => 'core/class-photo-ai.php',
                'priority' => 12,
                'description' => 'ÊñôÁêÜËá™ÂãïÂà§ÂÆö'
            ],
            'URP_Price_Tracker' => [
                'label' => '‰æ°Ê†ºËøΩË∑°',
                'file' => 'core/class-price-tracker.php',
                'priority' => 13,
                'description' => '‰æ°Ê†ºÂ§âÂãï„Ç¢„É©„Éº„Éà'
            ]
        ];
        
        $implemented = 0;
        $total = count($features);
        
        echo '<table class="status-table">';
        foreach ($features as $class => $info) {
            // Ëá™ÂãïÊ§úÂá∫
            $status = self::detect_component_status($class, $info['file']);
            
            // „Ç¢„Ç§„Ç≥„É≥„Å®„Éê„ÉÉ„Ç∏Ë®≠ÂÆö
            switch($status) {
                case 'complete':
                    $implemented++;
                    $badge = '<span class="status-badge status-complete">ÂÆüË£ÖÊ∏à</span>';
                    $icon = '‚úÖ';
                    break;
                case 'partial':
                    $badge = '<span class="status-badge status-partial">‰∏ÄÈÉ®ÂÆüË£Ö</span>';
                    $icon = '‚ö†Ô∏è';
                    break;
                case 'skeleton':
                    $badge = '<span class="status-badge status-planned">Ê∫ñÂÇô‰∏≠</span>';
                    $icon = 'üìù';
                    break;
                default:
                    $badge = '<span class="status-badge status-missing">Êú™ÂÆüË£Ö</span>';
                    $icon = '‚ùå';
            }
            
            echo '<tr>';
            echo '<td>';
            echo $icon . ' <strong>' . esc_html($info['label']) . '</strong>';
            echo '<br><small>' . esc_html($info['description']) . ' (ÂÑ™ÂÖàÂ∫¶: ' . $info['priority'] . ')</small>';
            echo '</td>';
            echo '<td>' . $badge . '</td>';
            echo '</tr>';
        }
        echo '</table>';
        
        // ÂÆüË£ÖÁéáË°®Á§∫
        if ($total > 0) {
            $percentage = round(($implemented / $total) * 100);
            echo '<p style="margin-top:15px; color:#666;">';
            echo 'Â∑ÆÂà•ÂåñÊ©üËÉΩÂÆüË£ÖÁéá: ' . $percentage . '% (' . $implemented . '/' . $total . ')';
            echo '</p>';
        }
    }
    
    /**
     * „Éá„Éº„Çø„Éô„Éº„ÇπÁä∂Ê≥ÅÔºàËá™ÂãïÊ§úÂá∫ÁâàÔºâ
     */
    private static function render_database_status() {
        global $wpdb;
        
        // „ÉÜ„Éº„Éñ„É´ÂÆöÁæ©ÔºàË™¨Êòé„ÅÆ„ÅøÁÆ°ÁêÜ„ÄÅÂ≠òÂú®„ÅØËá™ÂãïÊ§úÂá∫Ôºâ
        $tables = [
            'urp_rating_fields' => 'Ë©ï‰æ°È†ÖÁõÆÂÆöÁæ©',
            'urp_rating_values' => 'Ë©ï‰æ°ÂÄ§‰øùÂ≠ò',
            'urp_reviewer_ranks' => '„É¨„Éì„É•„Ç¢„Éº„É©„É≥„ÇØ',
            'urp_review_images' => '„É¨„Éì„É•„ÉºÁîªÂÉè',
            'urp_review_votes' => 'ÂΩπÁ´ã„Å£„ÅüÁ•®',
            'urp_affiliate_clicks' => '„Ç¢„Éï„Ç£„É™„ÇØ„É™„ÉÉ„ÇØ',
            'urp_price_history' => '‰æ°Ê†ºÂ±•Ê≠¥',
            'urp_review_meta' => '„É¨„Éì„É•„Éº„É°„Çø„Éá„Éº„Çø',
            'urp_user_preferences' => '„É¶„Éº„Ç∂„ÉºË®≠ÂÆö',
            'urp_spam_log' => '„Çπ„Éë„É†„É≠„Ç∞',
        ];
        
        $exists_count = 0;
        $total_count = count($tables);
        
        echo '<table class="status-table">';
        foreach ($tables as $table => $description) {
            $full_table = $wpdb->prefix . $table;
            
            // „ÉÜ„Éº„Éñ„É´Â≠òÂú®„ÉÅ„Çß„ÉÉ„ÇØÔºàËá™ÂãïÊ§úÂá∫Ôºâ
            $exists = $wpdb->get_var("SHOW TABLES LIKE '$full_table'") === $full_table;
            
            if ($exists) {
                $exists_count++;
                $badge = '<span class="status-badge status-complete">‰ΩúÊàêÊ∏à</span>';
                $icon = '‚úÖ';
                
                // „É¨„Ç≥„Éº„ÉâÊï∞„ÇÇÂèñÂæó
                $count = $wpdb->get_var("SELECT COUNT(*) FROM $full_table");
                $extra_info = " ({$count}‰ª∂)";
            } else {
                $badge = '<span class="status-badge status-missing">Êú™‰ΩúÊàê</span>';
                $icon = '‚ùå';
                $extra_info = '';
            }
            
            echo '<tr>';
            echo '<td>';
            echo $icon . ' ' . esc_html($description) . $extra_info;
            echo '<br><small style="color:#999;">' . esc_html($full_table) . '</small>';
            echo '</td>';
            echo '<td>' . $badge . '</td>';
            echo '</tr>';
        }
        echo '</table>';
        
        // ÈÄ≤ÊçóË°®Á§∫
        $progress = round(($exists_count / $total_count) * 100);
        echo '<div class="progress-bar" style="margin-top:15px;">';
        echo '<div class="progress-fill" style="width:' . $progress . '%">' . $exists_count . '/' . $total_count . '</div>';
        echo '</div>';
        
        echo '<p style="margin-top:15px;">';
        echo '<button class="button" onclick="createTables()">Êú™‰ΩúÊàê„ÉÜ„Éº„Éñ„É´„Çí‰ΩúÊàê</button>';
        echo '</p>';
    }
    
    /**
     * ÁÆ°ÁêÜÁîªÈù¢UIÁä∂Ê≥Å
     */
    private static function render_admin_ui_status() {
        $ui_components = [
            '„ÉÄ„ÉÉ„Ç∑„É•„Éú„Éº„Éâ' => 'complete',
            'Âü∫Êú¨Ë®≠ÂÆö' => 'partial',
            '„Ç¢„Éï„Ç£„É™„Ç®„Ç§„ÉàË®≠ÂÆö' => 'missing',
            '„É¨„Éì„É•„ÉºÁÆ°ÁêÜ' => 'partial',
            '„É¨„Éì„É•„Ç¢„ÉºÁÆ°ÁêÜ' => 'missing',
            '„Ç¢„Éä„É™„ÉÜ„Ç£„ÇØ„Çπ' => 'missing',
            '„Ç§„É≥„Éù„Éº„Éà/„Ç®„ÇØ„Çπ„Éù„Éº„Éà' => 'missing',
            'Â∞ÇÈñÄ„Éó„É©„Ç∞„Ç§„É≥ÁÆ°ÁêÜ' => 'partial',
        ];
        
        echo '<table class="status-table">';
        foreach ($ui_components as $component => $status) {
            $badge = match($status) {
                'complete' => '<span class="status-badge status-complete">ÂÆåÊàê</span>',
                'partial' => '<span class="status-badge status-partial">ÈÉ®ÂàÜÂÆüË£Ö</span>',
                'missing' => '<span class="status-badge status-missing">Êú™ÂÆüË£Ö</span>',
                default => '<span class="status-badge status-planned">Ë®àÁîª‰∏≠</span>'
            };
            
            echo '<tr>';
            echo '<td>' . esc_html($component) . '</td>';
            echo '<td>' . $badge . '</td>';
            echo '</tr>';
        }
        echo '</table>';
    }
    
    /**
     * Â∞ÇÈñÄ„Éó„É©„Ç∞„Ç§„É≥Áä∂Ê≥Å
     */
    private static function render_extension_status() {
        $extensions = [
            '„Ç´„É¨„ÉºÂ∞ÇÈñÄ' => ['curry', 'missing', 'üçõ'],
            '„É©„Éº„É°„É≥Â∞ÇÈñÄ' => ['ramen', 'missing', 'üçú'],
            'ÁæéÂÆπÂÆ§Â∞ÇÈñÄ' => ['beauty', 'missing', 'üíá'],
            'ÂØøÂè∏Â∞ÇÈñÄ' => ['sushi', 'missing', 'üç£'],
            '„Ç´„Éï„ÇßÂ∞ÇÈñÄ' => ['cafe', 'missing', '‚òï'],
        ];
        
        echo '<table class="status-table">';
        foreach ($extensions as $name => $info) {
            $badge = $info[1] === 'complete' 
                ? '<span class="status-badge status-complete">Âà©Áî®ÂèØËÉΩ</span>'
                : '<span class="status-badge status-missing">Êú™‰ΩúÊàê</span>';
            
            echo '<tr>';
            echo '<td>' . $info[2] . ' ' . esc_html($name) . '</td>';
            echo '<td>' . $badge . '</td>';
            echo '</tr>';
        }
        echo '</table>';
        
        echo '<p style="margin-top:15px;">';
        echo '<button class="button">„Ç´„É¨„ÉºÂ∞ÇÈñÄ„Éó„É©„Ç∞„Ç§„É≥„ÅÆ„Çµ„É≥„Éó„É´‰ΩúÊàê</button>';
        echo '</p>';
    }
    
    /**
     * TODO „É™„Çπ„Éà
     */
    private static function render_todo_list() {
        $todos = [
            [
                'task' => 'URP_Gamification „ÅÆÂÆüË£Ö',
                'priority' => 'medium',
                'reason' => 'ÂÑ™ÂÖàÂ∫¶5„ÅÆÂ∑ÆÂà•ÂåñÊ©üËÉΩ'
            ],
            [
                'task' => '„Ç´„É¨„ÉºÂ∞ÇÈñÄ„Éó„É©„Ç∞„Ç§„É≥„ÅÆ„Çµ„É≥„Éó„É´‰ΩúÊàê',
                'priority' => 'medium',
                'reason' => '„Ç∑„Çπ„ÉÜ„É†ÂÖ®‰Ωì„ÅÆÂãï‰ΩúÁ¢∫Ë™ç„Å´ÂøÖË¶Å'
            ],
            [
                'task' => '„Éï„É≠„É≥„Éà„Ç®„É≥„Éâ„ÉÜ„É≥„Éó„É¨„Éº„Éà‰ΩúÊàê',
                'priority' => 'medium',
                'reason' => '„É¨„Éì„É•„ÉºË°®Á§∫„ÉªÊäïÁ®ø„Éï„Ç©„Éº„É†„ÅåÊú™ÂÆüË£Ö'
            ],
        ];
        
        foreach ($todos as $todo) {
            $priority_class = 'priority-' . $todo['priority'];
            echo '<div class="todo-item ' . $priority_class . '">';
            echo '<strong>' . esc_html($todo['task']) . '</strong>';
            echo '<br><small>' . esc_html($todo['reason']) . '</small>';
            echo '</div>';
        }
    }
    
    /**
     * Ajax: „Ç≥„É≥„Éù„Éº„Éç„É≥„Éà„ÉÅ„Çß„ÉÉ„ÇØ
     */
    public static function ajax_check_component() {
        check_ajax_referer('urp_check', 'nonce');
        
        $component = sanitize_text_field($_POST['component'] ?? '');
        
        // „ÇØ„É©„Çπ„ÅÆÂ≠òÂú®Á¢∫Ë™ç
        $exists = class_exists($component) || class_exists('URP\\Core\\' . $component);
        
        if ($exists) {
            wp_send_json_success(['message' => '„ÇØ„É©„Çπ„ÅåÂ≠òÂú®„Åó„Åæ„Åô']);
        } else {
            wp_send_json_error(['message' => '„ÇØ„É©„Çπ„ÅåË¶ã„Å§„Åã„Çä„Åæ„Åõ„Çì']);
        }
    }
}

// ÂàùÊúüÂåñ
add_action('plugins_loaded', function() {
    URP_Implementation_Status::init();
});